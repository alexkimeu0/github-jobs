{"version":3,"sources":["components/Jobs/Job/Job.js","components/Jobs/Jobs.js","App.js","reportWebVitals.js","index.js"],"names":["Job","id","title","type","date","url","company","companyUrl","location","description","className","href","target","Truncate","lines","Jobs","useState","searchInput","setSearchInput","jobs","setJobs","useEffect","a","axios","get","then","response","data","getJobs","onSubmit","e","preventDefault","getSearch","placeholder","onChange","value","length","map","job","created_at","company_url","CircularProgress","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVA4BeA,G,MAtBH,SAAC,GAA+E,EAA7EC,GAA8E,IAA1EC,EAAyE,EAAzEA,MAAOC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,IAAKC,EAAiD,EAAjDA,QAASC,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACtE,OACI,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,6BAAKR,IACL,uBAAOQ,UAAU,OAAjB,SAAyBN,OAE7B,sBAAKM,UAAU,gBAAf,UACI,6BAAKP,IACL,8BAAG,mBAAGQ,KAAMJ,EAAYK,OAAO,SAASF,UAAU,UAA/C,SAA0DJ,IAA7D,SAAiF,+BAAOE,OACxF,oBAAGE,UAAU,OAAb,UACI,cAACG,EAAA,EAAD,CAAUC,MAAM,IAAhB,SAAqBL,IADzB,MAEI,mBAAGE,KAAMN,EAAKK,UAAU,OAAOE,OAAO,SAAtC,oCC2DTG,G,MApEF,WAAO,IAAD,EACuBC,mBAAS,IADhC,mBACRC,EADQ,KACKC,EADL,OAEWF,mBAAS,IAFpB,mBAEPG,EAFO,KAEDC,EAFC,KAKfC,qBAAU,YACO,uCAAG,sBAAAC,EAAA,sEACNC,IACDC,IAAI,oGACJC,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,SAH3B,2CAAH,qDAKbC,KACD,IAcH,OAEI,qCACA,qBAAKlB,UAAU,SAAf,SACI,uBAAMmB,SAfO,SAACC,GAClBA,EAAEC,iBACa,uCAAG,sBAAAT,EAAA,sEACRC,IACDC,IADC,oGACgGP,EADhG,mBAEDQ,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,SAHzB,2CAAH,oDAKfK,IAQkCtB,UAAU,eAAxC,UACI,uBACIP,KAAK,OACLO,UAAU,gBACVuB,YAAY,gBACZC,SAAU,SAACJ,GAAD,OAAOZ,EAAeY,EAAElB,OAAOuB,UAC7C,cAAC,IAAD,CAAYzB,UAAU,sBAI9B,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,yBAGKS,EAAKiB,OACF,qBAAK1B,UAAU,kBAAf,SAGQS,EAAKkB,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,CAEIpC,MAAOoC,EAAIpC,MACXC,KAAMmC,EAAInC,KACVE,IAAKiC,EAAIjC,IACTD,KAAMkC,EAAIC,WACV/B,SAAU8B,EAAI9B,SACdF,QAASgC,EAAIhC,QACbC,WAAY+B,EAAIE,YAChB/B,YAAa6B,EAAI7B,aARZ6B,EAAIrC,SANd,qBAAMS,UAAU,SAAhB,SAAyB,cAAC+B,EAAA,EAAD,c,MC1CzCC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.285e8231.chunk.js","sourcesContent":["import React from 'react'\nimport Truncate from 'react-truncate'\n\n\nimport './Job.css'\n\nconst Job = ({ id, title, type, date, url, company, companyUrl, location, description }) => {\n    return (\n        <div className=\"job\">\n            <div className=\"job__card\">\n                <div className=\"job__cardTitle\">\n                    <h5>{title}</h5> \n                    <small className=\"date\">{date}</small>         \n                </div>\n                <div className=\"job__cardBody\">\n                    <h4>{type}</h4>\n                    <p><a href={companyUrl} target=\"_blank\" className=\"company\">{company}</a>&nbsp;- <span>{location}</span></p>\n                    <p className=\"desc\">\n                        <Truncate lines=\"3\">{description}</Truncate>...\n                        <a href={url} className=\"more\" target=\"_blank\">Read more</a>\n                    </p>\n                </div>\n\n            </div>            \n        </div>\n    )\n}\n\nexport default Job\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nimport { CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport Job from './Job/Job'\n\nimport './Jobs.css'\n\nconst Jobs = () => {\n    const [searchInput, setSearchInput] = useState('')\n    const [ jobs, setJobs ] = useState([])\n\n\n    useEffect(() => {\n        const getJobs = async () => {\n            await axios\n                .get(\"https://shrouded-harbor-39689.herokuapp.com/https://jobs.github.com/positions.json?markdown=true\")\n                .then(response => setJobs(response.data))\n        }\n        getJobs()\n    }, [])\n\n    \n    const handleSearch = (e) => {\n        e.preventDefault()\n        const getSearch = async () => {\n            await axios\n                .get(`https://shrouded-harbor-39689.herokuapp.com/https://jobs.github.com/positions.json?search=${searchInput}&markdown=true`)\n                .then(response => setJobs(response.data))\n        }\n        getSearch()\n    }\n\n    \n    return (\n\n        <>\n        <div className=\"search\">\n            <form onSubmit={handleSearch} className=\"search__form\">\n                <input\n                    type=\"text\"\n                    className=\"search__input\"\n                    placeholder=\"Search Job...\"\n                    onChange={(e) => setSearchInput(e.target.value)} />\n                <SearchIcon className=\"search__icon\" />\n            </form>\n            \n        </div>\n        <div className=\"jobs\">\n            <h1 className=\"jobs__title\">Github Jobs</h1> \n\n            {\n                !jobs.length ? < div className=\"loader\"><CircularProgress /></ div> :\n                    <div className=\"jobs__container\">\n\n                        {\n                            jobs.map(job =>\n                                <Job\n                                    key={job.id}\n                                    title={job.title}\n                                    type={job.type}\n                                    url={job.url}\n                                    date={job.created_at}\n                                    location={job.location}\n                                    company={job.company}\n                                    companyUrl={job.company_url}\n                                    description={job.description}\n                                />)\n                        }\n                    </div>\n            }\n            </div>\n            </>\n    )\n}\n\nexport default Jobs\n","import { Jobs } from './components'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Jobs />      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}